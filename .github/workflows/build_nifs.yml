name: Build Native NIFs
on:
  workflow_call:
    inputs:
      parent_matrix:
        required: true
        type: string
  workflow_dispatch:

jobs:
  generate-matrix:
    runs-on: ubuntu-latest  # Using ubuntu-latest for consistency
    outputs:
      combined_matrix: ${{ steps.combine-matrices.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate NIF Matrix
        id: generate-nif-matrix
        run: |
          echo "--- Debug: Starting generate-nif-matrix ---"

          # Inline the JSON for simplicity and to avoid file issues.
          PACKAGES='[
            { "name": "NIF_Package_1", "config": "config1", "repos": ["repo1", "repo2"] },
            { "name": "NIF_Package_2", "config": "config2", "repos": ["repo3"] }
          ]'

          echo "--- Debug: PACKAGES:"
          echo "$PACKAGES"

          # *** Corrected jq command (using here string) ***
          MATRIX=$(jq -c '.[] | { name: .name, config: .config, repos: .repos } | .repos[] | {package: .name, repo: ., config: .config}' <<< "$PACKAGES")
          if [ $? -ne 0 ]; then
            echo "Error: jq command failed! (1)" >&2
            echo "jq output:" >&2
            jq -c '.[] | { name: .name, config: .config, repos: .repos } | .repos[] | {package: .name, repo: ., config: .config}' <<< "$PACKAGES" 2>&1 # Show stderr
            exit 1
          fi
          echo "--- Debug: MATRIX:"
          echo "$MATRIX"

          MATRIX_ARRAY=$(echo "[$MATRIX]" | jq -s .)
          if [ $? -ne 0 ]; then
            echo "Error: jq command failed! (2)" >&2
            exit 1
          fi
          echo "--- Debug: MATRIX_ARRAY:"
          echo "$MATRIX_ARRAY"

          echo "nif_matrix=$(echo "$MATRIX_ARRAY" | jq -c .)" >> "$GITHUB_OUTPUT"
          echo "--- Debug: nif_matrix output:"
          echo "${{ steps.generate-nif-matrix.outputs.nif_matrix }}"

      - name: Combine Matrices
        id: combine-matrices
        run: |
          echo "--- Debug: Starting combine-matrices ---"

          # Inline the parent matrix for testing.
          PARENT_MATRIX='{
            "platform": [
              { "id": "ios", "name": "iOS", "sdk": "iphoneos", "arch": "arm64", "rust_target": "aarch64-apple-ios" },
              { "id": "ios_sim_arm64", "name": "iOS Simulator arm64", "sdk": "iphonesimulator", "arch": "arm64", "rust_target": "aarch64-apple-ios-sim"  },
              { "id": "ios_sim_x86_64", "name": "iOS Simulator x86_64", "sdk": "iphonesimulator", "arch": "x86_64", "rust_target": "x86_64-apple-ios"  }
            ]
          }'
          echo "--- Debug: PARENT_MATRIX (inlined):"
          echo "$PARENT_MATRIX"

          NIF_MATRIX=$(echo "${{ steps.generate-nif-matrix.outputs.nif_matrix }}")
          echo "--- Debug: NIF_MATRIX:"
          echo "$NIF_MATRIX"

          # Corrected jq to iterate over both platforms and NIF entries
          COMBINED_MATRIX=$(echo "$PARENT_MATRIX" | jq --argjson nif "$NIF_MATRIX" -c '
            .platform[] as $p | $nif[] | {platform: $p, package: .package, repo: .repo, config: .config}
          ')
          if [ $? -ne 0 ]; then
            echo "Error: jq combine command failed!" >&2
            echo "--- Debug: jq combine error output:" >&2
             echo "$PARENT_MATRIX" | jq --argjson nif "$NIF_MATRIX" -c '
            .platform[] as $p | $nif[] | {platform: $p, package: .package, repo: .repo, config: .config}
          ' 2>&1
            exit 1
          fi
          echo "--- Debug: COMBINED_MATRIX:"
          echo "$COMBINED_MATRIX"

          echo "matrix=$(echo "[$COMBINED_MATRIX]" | jq -s .)" >> "$GITHUB_OUTPUT"
          echo "--- Debug: matrix output:"
          echo "${{ steps.combine-matrices.outputs.matrix }}"

  build-nifs:
    needs: generate-matrix
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.combined_matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build NIFs for ${{ matrix.platform.name }} - ${{ matrix.package }} - ${{ matrix.repo }}
        run: |
          echo "Building NIF package ${{ matrix.package }} for repo ${{ matrix.repo }} with config ${{ matrix.config }} (Platform: ${{ matrix.platform.name }})"
          mkdir -p "_build/nifs/${{ matrix.platform.id }}/${{ matrix.package }}/${{ matrix.repo }}"
          echo "Building NIF package ${{ matrix.package }} for repo ${{ matrix.repo }} with config ${{ matrix.config }} (Platform: ${{ matrix.platform.name }})" > "_build/nifs/${{ matrix.platform.id }}/${{ matrix.package }}/${{ matrix.repo }}/msg.txt"
      - name: Upload NIF Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nif-${{ matrix.platform.id }}-${{ matrix.package }}-${{ matrix.repo }}
          path: "_build/nifs/${{ matrix.platform.id }}/${{ matrix.package }}/${{ matrix.repo }}"