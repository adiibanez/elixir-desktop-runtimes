name: Apple OTP Build Pipeline
on:
  push:
    branches:
      - dummy-ci
  pull_request:
jobs:
  define-matrix:
    runs-on: macos-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # - name: Install yq (if missing)
      #   run: brew install jq yq
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Convert matrix.yml to JSON
        id: set-matrix
        run: |
          yq -o=json '.' .github/matrix_config.yml | jq -c > matrix.json
          cat matrix.json
          echo "matrix=$(cat matrix.json)" >> "$GITHUB_OUTPUT"
      - name: Debug Output
        run: cat matrix.json
  # test_matrix: # Keep this for easy testing/debugging
  #   runs-on: macos-latest
  #   needs: define-matrix
  #   strategy:
  #     matrix:
  #       platform: ${{ fromJson(needs.define-matrix.outputs.matrix).platform }}
  #       erlixir: ${{ fromJson(needs.define-matrix.outputs.matrix).erlixir }}
  #   steps:
  #     - name: Test
  #       shell: bash
  #       run: |
  #         echo "Platform ID: ${{ matrix.platform.platform_id }}, OTP Version: ${{ matrix.erlixir['otp_version'] }}"
  debug_matrix:
    runs-on: macos-latest
    steps:
      - name: Debug matrix
        shell: bash
        run: |
          echo ${{ needs.define-matrix.outputs.matrix }}
  build_openssl: # This is the job that uses the matrix
    strategy:
      matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
    needs: define-matrix
    uses: ./.github/workflows/build_openssl.yml
    with:
      openssl_version: ${{ matrix.openssl.version }}
      platform_id: ${{ matrix.platform.platform_id}}
      name: ${{ matrix.platform.name}}
      sdk: ${{ matrix.platform.sdk}}
      arch: ${{matrix.platform.arch}}
      base_arch: ${{matrix.platform.base_arch}}
      openssl_prefix: ${{matrix.platform.openssl_prefix}}
      openssl_opts: ${{matrix.platform.openssl_opts}}
      openssl_arch: ${{matrix.platform.openssl_arch}}
  build_otp_round_1:
    strategy:
      matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
    needs: [define-matrix, build_openssl]
    uses: ./.github/workflows/build_otp.yml
    with:
      round: 1
      platform_id: ${{ matrix.platform.platform_id}}
      otp_version: ${{ matrix.erlixir.otp_version}}
      elixir_version: ${{ matrix.erlixir.elixir_version}}
      use_git: ${{ matrix.platform.use_git }}
      git_repo: ${{ matrix.platform.git_repo}}
      git_ref: ${{ matrix.platform.git_ref}}
      name: ${{ matrix.platform.name}}
      sdk: ${{ matrix.platform.sdk}}
      base_arch: ${{ matrix.platform.base_arch}}
      openssl_version: ${{ matrix.openssl.version }}
      openssl_prefix: ${{ matrix.platform.openssl_prefix}}
      arch: ${{ matrix.platform.arch}}
      erl_opts: ${{ matrix.platform.erl_opts}}
      erl_opts_description: ${{ matrix.platform.erl_opts_description}}
      otp_arch: ${{ matrix.platform.otp_arch}}
      xcomp: ${{ matrix.platform.xcomp}}
  build_nifs:
    needs: [define-matrix, build_otp_round_1]
    uses: ./.github/workflows/build_nifs.yml
    strategy:
      matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
    with:
      platform_id: ${{ matrix.platform.platform_id}}
      otp_version: ${{ matrix.erlixir.otp_version}}
      elixir_version: ${{ matrix.erlixir.elixir_version}}
      name: ${{ matrix.platform.name}}
      sdk: ${{ matrix.platform.sdk}}
      base_arch: ${{ matrix.platform.base_arch}}
      openssl_version: ${{ matrix.openssl.version }}
      openssl_prefix: ${{matrix.platform.openssl_prefix}}
      arch: ${{matrix.platform.arch}}
      otp_arch: ${{matrix.platform.otp_arch}}
  build_otp_round_2:
    strategy:
      matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
    needs: [define-matrix, build_openssl, build_otp_round_1, build_nifs]
    uses: ./.github/workflows/build_otp.yml
    with:
      round: 2
      platform_id: ${{ matrix.platform.platform_id}}
      otp_version: ${{ matrix.erlixir.otp_version}}
      elixir_version: ${{ matrix.erlixir.elixir_version}}
      use_git: ${{ matrix.platform.use_git}}
      git_repo: ${{ matrix.platform.git_repo}}
      git_ref: ${{ matrix.platform.git_ref}}
      name: ${{ matrix.platform.name}}
      sdk: ${{ matrix.platform.sdk}}
      base_arch: ${{ matrix.platform.base_arch}}
      openssl_version: ${{ matrix.openssl.version }}
      openssl_prefix: ${{matrix.platform.openssl_prefix}}
      arch: ${{matrix.platform.arch}}
      erl_opts: ${{matrix.platform.erl_opts}}
      erl_opts_description: ${{matrix.platform.erl_opts_description}}
      otp_arch: ${{matrix.platform.otp_arch}}
      xcomp: ${{matrix.platform.xcomp}}
  final_combine:
    strategy:
      matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
    needs: [build_otp_round_2, build_nifs]
    uses: ./.github/workflows/final_combine.yml
    with:
      otp_version: ${{ matrix.erlixir.otp_version}}
      elixir_version: ${{ matrix.erlixir.elixir_version}}
