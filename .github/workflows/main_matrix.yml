name: Apple OTP Build Pipeline

on:
  push:
    branches:
      - dummy-ci
  pull_request:

jobs:
  define-matrix:
    runs-on: macos-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # - name: Install yq (if missing)
      #   run: brew install jq yq

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Convert matrix.yml to JSON
        id: set-matrix
        run: |
          yq -o=json '.' .github/matrix_config.yml | jq -c > matrix.json
          cat matrix.json
          echo "matrix=$(cat matrix.json)" >> "$GITHUB_OUTPUT"

      - name: Debug Output
        run: cat matrix.json

  test_matrix:
    runs-on: macos-latest
    needs: define-matrix
    strategy:
      matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}

    steps:
      - name: Test
        shell: bash
        run: |
          # echo ${{ needs.define-matrix.outputs.matrix }}
          echo ${{matrix.platform.id}} ${{matrix.erlixir.otp-version}}

  build_openssl:
    needs: define-matrix
    uses: ./.github/workflows/build_openssl.yml
    with:
      matrix_json: '${{ needs.define-matrix.outputs.matrix }}'

  # build_otp_round_1:
  #   needs: build_openssl
  #   uses: ./.github/workflows/build_otp.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
  #     round: 1

  # build_nifs:
  #   needs: build_otp_round_1
  #   uses: ./.github/workflows/build_nifs.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}

  # build_otp_round_2:
  #   needs: [build_otp_round_1, build_nifs]
  #   uses: ./.github/workflows/build_otp.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
  #     round: 2

  # final_combine:
  #   needs: build_otp_round_2
  #   uses: ./.github/workflows/final_combine.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
