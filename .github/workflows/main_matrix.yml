name: Apple OTP Build Pipeline

on:
  push:
    branches:
      - dummy-ci
  pull_request:

jobs:
  define-matrix:
    runs-on: macos-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      # - name: Install yq (if missing)
      #   run: brew install jq yq

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Convert matrix.yml to JSON
        id: set-matrix
        run: |
          yq -o=json '.' .github/matrix_config.yml | jq -c > matrix.json
          cat matrix.json
          echo "matrix=$(cat matrix.json)" >> "$GITHUB_OUTPUT"

      - name: Debug Output
        run: cat matrix.json

  # test_matrix: # Keep this for easy testing/debugging
  #   runs-on: macos-latest
  #   needs: define-matrix
  #   strategy:
  #     matrix:
  #       platform: ${{ fromJson(needs.define-matrix.outputs.matrix).platform }}
  #       erlixir: ${{ fromJson(needs.define-matrix.outputs.matrix).erlixir }}
  #   steps:
  #     - name: Test
  #       shell: bash
  #       run: |
  #         echo "Platform ID: ${{ matrix.platform.id }}, OTP Version: ${{ matrix.erlixir['otp-version'] }}"

  build_openssl: # This is the job that uses the matrix
    needs: define-matrix
    runs-on: macos-latest
    # strategy:
    #   matrix:
    #     platform: ${{ fromJson(needs.define-matrix.outputs.matrix).platform }}

    steps:
      - name: Builder
        uses: ./.github/workflows/build_openssl_minimal.yml
        with:
          matrix_json: ${{toJson(fromJson(needs.define-matrix.outputs.matrix).platform)}}

      # - uses: ./.github/workflows/build_openssl_minimal.yml
      #   with:
      #     # Platform settings
      #     test_input: ${{ matrix.platform.id }}

  # build_openssl: # This is the job that uses the matrix
  #   needs: define-matrix
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       platform: ${{ fromJson(needs.define-matrix.outputs.matrix).platform }}
  #   steps: # uses and with moved *inside* steps
  #     - uses: ./.github/workflows/build_openssl.yml
  #       with:
  #         # Platform settings
  #         id: ${{ matrix.platform.id }}
  #         name: ${{ matrix.platform.name }}
  #         sdk: ${{ matrix.platform.sdk }}
  #         arch: ${{ matrix.platform.arch }}
  #         base_arch: ${{ matrix.platform.base_arch }}
  #         openssl_prefix: ${{ matrix.platform.openssl_prefix }}
  #         openssl_opts: ${{ matrix.platform.openssl_opts }}
  #         openssl_arch: ${{ matrix.platform.openssl_arch }}

  # build_openssl_:
  #   if: false
  #   needs: define-matrix
  #   uses: ./.github/workflows/build_openssl.yml
  #   with:
  #     matrix_json: '${{ needs.define-matrix.outputs.matrix }}'

  # build_otp_round_1:
  #   needs: build_openssl
  #   uses: ./.github/workflows/build_otp.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
  #     round: 1

  # build_nifs:
  #   needs: build_otp_round_1
  #   uses: ./.github/workflows/build_nifs.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}

  # build_otp_round_2:
  #   needs: [build_otp_round_1, build_nifs]
  #   uses: ./.github/workflows/build_otp.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
  #     round: 2

  # final_combine:
  #   needs: build_otp_round_2
  #   uses: ./.github/workflows/final_combine.yml
  #   with:
  #     matrix: ${{ fromJson(needs.define-matrix.outputs.matrix) }}
