name: Build iOS Openssl

on:
  workflow_call:
    inputs:
      version: # the variable you can use in place of a matrix
        required: true
        type: number
      hash: 
        required: true
        type: string
      arch_type: 
        required: true
        type: string

env:
  OPENSSL_VERSION: ${{inputs.version}}
  OPENSSL_HASH: ${{inputs.hash}}
jobs:
  build_setup:
    name: Build openssl libs for iOS targets
    runs-on: macos-latest
    uses: actions/checkout@v4
    steps:
      - name: Cache Openssl source
        uses: actions/cache@v4
        id: openssl-cache
        with:
          path: |
            openssl-${{ env.OPENSSL_VERSION }}
          key: openssl-source-cache-${{ env.OPENSSL_VERSION }}
      - name: Download and Extract OpenSSL
        if: steps.openssl-cache.outputs.cache-hit != 'true'
        id: openssl-download
        run: |
          wget "https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz"
          # echo "$OPENSSL_HASH  openssl-$OPENSSL_VERSION.tar.gz" | sha256sum -c
          tar xzf openssl-$OPENSSL_VERSION.tar.gz
          ls -lah ${{github.workspace}}/openssl-$OPENSSL_VERSION

          echo "OPENSSL_VERSION=$OPENSSL_VERSION" >> "$GITHUB_OUTPUT"
          echo "OPENSSL_HASH=$OPENSSL_HASH" >> "$GITHUB_OUTPUT"
          echo "OPENSSL_PATH=$PWD/openssl-$OPENSSL_VERSION" >> "$GITHUB_OUTPUT"

      - name: Cache Openssl iOS builds
        uses: actions/cache@v4
        id: openssl-ios-build-cache
        with:
          path: |
            _build/ios-openssl
          key: openssl-ios-build-cache-${{ env.OPENSSL_VERSION }}-${{ runner.os }}-${{inputs.arch_type}}-${{ hashFiles('./scripts/install_openssl_ios.sh') }}

      - name: Build iOS OpenSSL
        if: steps.openssl-ios-build-cache.outputs.cache-hit != 'true'
        shell: bash
        run: |
          mkdir -p _build/ios-openssl
          cd openssl-${{ env.OPENSSL_VERSION }}
          OPENSSL_VERSION=${{ env.OPENSSL_VERSION }} BUILD_DIR=${{github.workspace}}/_build/ios-openssl ../scripts/install_openssl_ios.sh ${{inputs.arch_type}}
