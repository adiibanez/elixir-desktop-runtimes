name: "Apple Mobile Targets"
on:
  workflow_dispatch:
  push:
    branches: 
      - ci_mods
      - refactoring
    paths:
    # Just run on main branch if "native" path changed.
    #- "native/**"
    - "**"
    # Also run if this file changes.
    #- ".github/workflows/release.yml"
    #- ".github/workflows/**"
    tags:
    # Tags will always run.
    - "*"
  pull_request:
    paths:
      # In PRs we only run if this file changes.
      - ".github/workflows/**"

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

env:
  OTP_SOURCE: https://github.com/erlang/otp
  OPENSSL_HASH: 002a2d6b30b58bf4bea46c43bdd96365aaf8daa6c428782aa4feee06da197df3
  OPENSSL_VERSION: 3.4.1
  OPENSSL_PREFIX: ${{github.workspace}}/_build/openssl_cache
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 

jobs:
  build-ios:
    # if: false
    strategy:
      fail-fast: false
      matrix:
        #archs: ["ios-arm64", "iossimulator-x86_64", "iossimulator-arm64"]
        archs: ["ios-arm64"]
        # archs:
        #   - {
        #     id: "ios",
        #     mix_id: "ios",
        #     arch: "armv7",
        #     sdk: "iphoneos",
        #     openssl_arch: "ios-xcrun",
        #     xcomp: "arm-ios",
        #     name: "arm-apple-ios",
        #     cflags: "-mios-version-min=7.0.0 -fno-common -Os -D__IOS__=yes",
        #     }
        #   - {id: "ios64",
        #     mix_id: "ios-arm64",
        #     arch: "arm64",
        #     sdk: "iphoneos",
        #     openssl_arch: "ios64-xcrun",
        #     xcomp: "arm64-ios",
        #     name: "aarch64-apple-ios",
        #     cflags: "-mios-version-min=7.0.0 -fno-common -Os -D__IOS__=yes"
        #   }
        #   - {
        #     id: "iossimulator",
        #     mix_id: "iossimulator-x86_64",
        #     arch: "x86_64",
        #     sdk: "iphonesimulator",
        #     openssl_arch: "iossimulator-x86_64-xcrun",
        #     xcomp: "x86_64-iossimulator",
        #     name: "x86_64-apple-iossimulator",
        #     cflags: "-mios-simulator-version-min=7.0.0 -fno-common -Os -D__IOS__=yes"
        #   }
        #   - {
        #     id: "iossimulator",
        #     mix_id: "iossimulator-arm64",
        #     arch: "arm64",
        #     sdk: "iphonesimulator",
        #     openssl_arch: "iossimulator-arm64-xcrun",
        #     xcomp: "arm64-iossimulator",
        #     name: "aarch64-apple-iossimulator",
        #     cflags: "-mios-simulator-version-min=7.0.0 -fno-common -Os -D__IOS__=yes",
        #   }

        erlixir:
          - { otp-version: 27.2.4, elixir-version: 1.18.2, erl-opts: "--disable-year2038"} # configured in package_ios_runtime.ex too configuration
          #- { otp-version: 26.2.5.6, elixir-version: 1.16.3 }
          - { otp-version: 26.2.5.6, elixir-version: 1.18.2 }
    env:
      OTP_TAG: OTP-${{ matrix.erlixir.otp-version }}
      RUSTLER_BTLEPLUG_BUILD: 1
      GH_TOKEN: ${{ github.token }}
      #OPENSSL_HASH: 002a2d6b30b58bf4bea46c43bdd96365aaf8daa6c428782aa4feee06da197df3
      #OPENSSL_VERSION: 3.4.1

    name: "iOS erlang runtime"
    runs-on: "macos-latest"
    steps:
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
    
      - name: Prepare brew tools
        shell: bash
        run: |
          #brew install git carthage coreutils
          brew install coreutils
          brew info openssl
          # brew unlink openssl@1.1 && brew link openssl@3
      - uses: actions/checkout@v4

      - name: Configure erl options
        if: ${{ matrix.erlixir.erl-opts }} != ''
        run: |
          echo KERL_CONFIGURE_OPTIONS="${{matrix.erlixir.erl-opts}}" >> "$GITHUB_ENV"
          # used for hashing cache key
          echo "${{matrix.erlixir.erl-opts}}" > .kerl_configuration_options

      - name: Setup asdf .tool-versions
        id: asdf-setup
        run: |
          echo "" > .tool-versions
          echo "erlang ${{matrix.erlixir.otp-version}}" >> .tool-versions
          echo "elixir ${{matrix.erlixir.elixir-version}}" >> .tool-versions
          # echo PATH="$HOME/.asdf/shims:$HOME/.asdf/bin:$PATH" >> "$GITHUB_ENV"

      - name: Setup asdf
        uses: asdf-vm/actions/setup@master

      - name: asdf cache
        id: asdf-cache
        uses: actions/cache@v4
        with:
          path: ~/.asdf/
          key: ${{ runner.os }}-${{ hashFiles('**/.tool-versions', '.kerl_configuration_options') }}

      - name: Install CD tools from .tool-versions
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        uses: asdf-vm/actions/install@master

      # - name: Asdf install
      #   shell: bash
      #   run: |
      #     asdf plugin add erlang
      #     asdf plugin add elixir

      #     # rm -rf $HOME/.asdf/installs/elixir/${{ matrix.erlixir.elixir-version }}
      #     asdf install

      - name: Test elixir
        id: test-setup-elixir
        continue-on-error: true
        # if: steps.asdf-cache.outputs.cache-hit != 'true'
        run: | 
          asdf current

          type -a mix
          type -a elixir

          erl -version
          elixir -version

          whereis mix
          # mix --version || true
          
      - name: OTP Cache
        uses: actions/cache@v3
        id: otp-cache
        with:
          path: |
            _build/otp_cache
          key: macos-otp-${{ matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts }}
          restore-keys: |
            macos-otp-${{ matrix.archs}}-${{ matrix.erlixir.otp-version }}-
            macos-otp-

      - name: Openssl Cache
        uses: actions/cache@v3
        id: openssl-cache
        with:
          path: |
            _build/openssl_cache/
          key: macos-openssl-${{ matrix.archs}}-${{env.OPENSSL_VERSION}}
          # restore-keys: 
          #   macos-openssl-

      - name: Build iOS runtime
        id: build-ios
        shell: bash
        # continue-on-error: false
        env: 
          PARALLEL: "true"
          # PATH: "/usr/bin:/usr/sbin/:/usr/local/bin:$HOME/.asdf/shims:$HOME/.asdf/bin:$PATH"
        run:  |
          mix package.ios.runtime --arch ${{matrix.archs}}
          find _build -name liberlang.xframework

      - name: Runtime logs
        shell: bash
        run: |
          find . -name runtimes_run.log
          cat `find . -name runtimes_run.log`
          find . -name aarch64-apple-darwin23.6.0
          ls -lah `find . -name aarch64-apple-darwin23.6.0`/Makefile || true

      - name: Info Openssl
        shell: bash
        #continue-on-error: true
        run: |
          ls -lah _build/openssl_cache || true
          find . -name openssl

      # - name: Save Openssl Cache
      #   uses: actions/cache/save@v3
      #   if: steps.openssl-cache.outputs.cache-hit != 'true'
      #   # && steps.build-ios.outcome == 'success'
      #   with:
      #     path: |
      #       _build/openssl_cache/
      #     key: macos-openssl-${{ matrix.archs }}-${{env.OPENSSL_VERSION}}

      # - name: Save OTP Cache
      #   uses: actions/cache/save@v3
      #   if: steps.otp-cache.outputs.cache-hit != 'true'
      #   id: otp-cache-save
      #   with:
      #     path: |
      #       _build/otp_cache
      #     key: macos-otp-${{ matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts }}


      # - name: Archive runtimes
      #   uses: actions/upload-artifact@v4
      #   #if: steps.build-ios.outcome == 'success'
      #   continue-on-error: true
      #   with:
      #     #name: ios-${{matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework.zip
      #     path: | 
      #       _build/liberlang.xcframework
      #       **/*.log
            
      #     # path: |
      #     #   ${{github.workspace}}/_build/ios-${{matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework
      #     #   runtimes_run.log


      - name: Restructure dir for iOS artifact
        continue-on-error: true
        shell: bash
        if: steps.build-ios.outcome == 'success'
        run: |
          mkdir ${{github.workspace}}/_build/ios-${{matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework
          ls -lah _build
          cp _build/liberlang.xcframework ${{github.workspace}}/_build/ios-${{matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework/ || true

      - name: Archive runtimes
        uses: actions/upload-artifact@v4
        #if: steps.build-ios.outcome == 'success'
        continue-on-error: true
        with:
          name: ios-${{matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework.zip
          #path: _build/liberlang.xcframework
          path: |
            ${{github.workspace}}/_build/ios-${{matrix.archs}}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework
            **/*.log

      # - name: Generate iOS Checksums and Release Notes
      #   id: ios-checksums
      #   if: steps.build-ios.outcome == 'success'
      #   shell: bash
      #   run: |
      #     cd _build
      #     # For GNU systems.
      #     if command -v sha256sum >/dev/null 2>&1; then
      #         find . -name "*.xcframework.zip" -print0 | while IFS= read -r -d $'\0' file; do
      #           sha256sum "$file" >> checksums.txt
      #         done
      #     # For BSD systems
      #     else
      #         find . -name "*.xcframework.zip" -print0 | while IFS= read -r -d $'\0' file; do
      #           shasum -a 256 "$file" >> checksums.txt
      #         done
      #     fi
      #     echo "::set-output name=ios_checksums::$(cat checksums.txt)"
      #     cd ..

      # - name: iOS release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     #files: _build/liberlang.xcframework
      #     files: ios-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework.zip
      #     body: |
      #       iOS Checksums:
      #       ${{ steps.ios-checksums.outputs.ios_checksums }}
  
  archive-ios:
    # if: false
    runs-on: macos-latest
    continue-on-error: true
    needs: [build-ios]
    steps: 
      - uses: actions/checkout@v3
      - name: Load outputs
        uses: actions/download-artifact@v4
        with:
          name: outputs
          path: outputs

      - run: |
          ls outputs
          cat outputs/*.txt
        
  
    