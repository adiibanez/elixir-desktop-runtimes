name: "CI"
on:
  push:
    branches: 
      - ci_mods
    paths:
    # Just run on main branch if "native" path changed.
    #- "native/**"
    - "**"
    # Also run if this file changes.
    #- ".github/workflows/release.yml"
    #- ".github/workflows/**"
    tags:
    # Tags will always run.
    - "*"
  pull_request:
    paths:
      # In PRs we only run if this file changes.
      - ".github/workflows/**"
env:
  OTP_SOURCE: https://github.com/erlang/otp
jobs:
  build-android:
    strategy:
      fail-fast: false
      matrix:
        arch: ["arm", "arm64", "x86_64"]
        erlixir:
          #- { otp-version: 27.2.4, elixir-version: 1.18.2, erl-opts: "--disable-year2038"}
          - { otp-version: 26.2.5.6, elixir-version: 1.16.3 }
          - { otp-version: 26.2.5.6, elixir-version: 1.18.2 }
    env:
      OTP_TAG: OTP-${{ matrix.erlixir.otp-version }}
    name: "Build Android runtimes"
    runs-on: "ubuntu-latest"

    steps:
      - name: Configure erl options
        if: ${{ matrix.erlixir.erl-opts }} != ''
        run: |
          KERL_CONFIGURE_OPTIONS=${{matrix.erlixir.erl-opts}}
          #ERL_COMPILER_OPTIONS=${{matrix.erlixir.erl-opts}}

      - name: erlef/setup-beam Cache
        uses: actions/cache@v3
        id: beam-cache
        with:
          path: /home/runner/work/_temp/.setup-beam/
          key: android-setup-beam-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}

      - name: Setup elixir
        id: setup-beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.erlixir.otp-version }}
          elixir-version: ${{ matrix.erlixir.elixir-version }}

      - name: Save erlef/setup-beam Cache
        if: steps.beam-cache.outputs.cache-hit != 'true' && steps.setup-beam.outcome == 'success'
        uses: actions/cache/save@v3
        with:
          path: /home/runner/work/_temp/.setup-beam/
          key: android-setup-beam-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}

      - name: Debug erlef/setup-beam install locations
        shell: bash
        run: |
          env | grep INSTALL_DIR_FOR_

      - uses: actions/checkout@v4

      - name: Build Android ${{ matrix.arch }} runtimes
        run: |
          mix deps.get
          ARCH=${{ matrix.arch }} mix package.android.runtime
          ARCH=${{ matrix.arch }} mix package.android.nif

      - name: Docker images
        shell: bash
        run: |
          docker images

      - name: Archive Android runtimes
        uses: actions/upload-artifact@v4
        with:
          name: android-${{ matrix.arch }}-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.zip
          path: _build/*.zip

      - name: Generate Android Checksums and Release Notes
        id: android-checksums
        run: |
          cd _build
          # For GNU systems.
          if command -v sha256sum >/dev/null 2>&1; then
              find . -name "*.zip" -print0 | while IFS= read -r -d $'\0' file; do
                sha256sum "$file" >> checksums.txt
              done
          # For BSD systems
          else
              find . -name "*.zip" -print0 | while IFS= read -r -d $'\0' file; do
                shasum -a 256 "$file" >> checksums.txt
              done
          fi
          echo "::set-output name=android_checksums::$(cat checksums.txt)"
          cd ..

      - name: Android ${{ matrix.arch }} release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: _build/*.zip
          body: |
            Android Checksums:
            ${{ steps.android-checksums.outputs.android_checksums }}
  build-ios:
    strategy:
      fail-fast: false
      matrix:
        erlixir:
          #- { otp-version: 27.2.4, elixir-version: 1.18.2, erl-opts: "--disable-year2038"} # configured in package_ios_runtime.ex too configuration
          - { otp-version: 26.2.5.6, elixir-version: 1.16.3 }
          - { otp-version: 26.2.5.6, elixir-version: 1.18.2 }
    env:
      OTP_TAG: OTP-${{ matrix.erlixir.otp-version }}
      OPENSSL_HASH: 002a2d6b30b58bf4bea46c43bdd96365aaf8daa6c428782aa4feee06da197df3
      OPENSSL_VERSION: 3.4.1

    name: "Build iOS runtime"
    runs-on: "macos-latest"
    steps:
      - run: |
          brew install git carthage coreutils
          brew unlink openssl@1.1 && brew link openssl@3
          brew info asdf
      - uses: actions/checkout@v4

      - name: Asdf Cache
        uses: actions/cache@v3
        id: asdf-cache
        with:
          path: /Users/runner/.asdf
          key: macos-asdf-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts }}-${{ matrix.erlixir.elixir-version }}

      - name: Setup asdf
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/asdf-vm/asdf.git ~/.asdf

      - name: Configure erl options
        if: ${{ matrix.erlixir.erl-opts }} != ''
        run: |
          export KERL_CONFIGURE_OPTIONS="${{matrix.erlixir.erl-opts}}"
          # --with-ssl=$(brew --prefix openssl@3) 
          
      - name: Setup elixir
        id: asdf-setup
        if: steps.asdf-cache.outputs.cache-hit != 'true'
        run: |
          . $HOME/.asdf/asdf.sh
          
          asdf plugin add erlang
          asdf plugin add elixir
          echo "erlang ${{matrix.erlixir.otp-version}}" >> .tool-versions
          echo "elixir ${{matrix.erlixir.elixir-version}}" >> .tool-versions
          asdf install erlang
          asdf install elixir

      - name: Save asdf Cache
        if: steps.asdf-cache.outputs.cache-hit != 'true' && steps.asdf-setup.outcome == 'success'
        uses: actions/cache/save@v3
        with:
          path: |
            /Users/runner/.asdf
          key: macos-asdf-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts }}-${{ matrix.erlixir.elixir-version }}

      - name: OTP Cache
        uses: actions/cache@v3
        id: otp-cache
        with:
          path: |
            _build/otp
          key: macos-otp-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts }}
      
      - name: Openssl Cache
        uses: actions/cache@v3
        id: openssl-cache
        with:
          path: |
            _build/openssl
          key: macos-openssl-${{env.OPENSSL_VERSION}}

      - name: Build iOS runtime
        id: build-ios
        env: 
          PARALLEL: "true"
        run:  |
          . $HOME/.asdf/asdf.sh
          mix package.ios.runtime

      - name: Info Openssl
        shell: bash
        continue-on-error: true
        run: |
          ls -lah _build/openssl || true
          find . -name openssl

      - name: Save Openssl Cache
        uses: actions/cache/save@v3
        if: steps.openssl-cache.outputs.cache-hit != 'true'
        # && steps.build-ios.outcome == 'success'
        with:
          path: |
            _build/arm-apple-ios/openssl
            _build/aarch64-apple-ios/openssl
            _build/x86_64-apple-iossimulator/openssl
            _build/aarch64-apple-iossimulator/openssl
          key: macos-openssl-${{env.OPENSSL_VERSION}}

      - name: Save OTP Cache
        uses: actions/cache/save@v3
        id: otp-cache-save
        with:
          path: |
            _build/arm-apple-ios/otp
            _build/aarch64-apple-ios/otp
            _build/x86_64-apple-iossimulator/otp
            _build/aarch64-apple-iossimulator/otp
          key: macos-otp-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts }}

      - name: Restructure dir for iOS artifact
        shell: bash
        run: |
          mkdir /tmp/ios-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework
          ls -lah _build
          cp _build/liberlang.xcframework /tmp/ios-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework/

      - name: Archive runtimes
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework.zip
          #path: _build/liberlang.xcframework
          path: /tmp/ios-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework

      - name: Generate iOS Checksums and Release Notes
        id: ios-checksums
        run: |
          cd _build
          # For GNU systems.
          if command -v sha256sum >/dev/null 2>&1; then
              find . -name "*.xcframework.zip" -print0 | while IFS= read -r -d $'\0' file; do
                sha256sum "$file" >> checksums.txt
              done
          # For BSD systems
          else
              find . -name "*.xcframework.zip" -print0 | while IFS= read -r -d $'\0' file; do
                shasum -a 256 "$file" >> checksums.txt
              done
          fi
          echo "::set-output name=ios_checksums::$(cat checksums.txt)"
          cd ..

      - name: iOS release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          #files: _build/liberlang.xcframework
          files: ios-${{ matrix.erlixir.otp-version }}-erl-opts-${{matrix.erlixir.erl-opts}}-${{ matrix.erlixir.elixir-version }}-runtime.xcframework.zip
          body: |
            iOS Checksums:
            ${{ steps.ios-checksums.outputs.ios_checksums }}
